SET TERM ^ ;

#define PROCEDURE PROCEDURE
#define BEGIN AS BEGIN
#define ENDPROC END ^
#define qa(id) :id
#define SEQUENCE(id) GENERATOR id ^
#define EXECUTE EXECUTE PROCEDURE
#define ENDIF

#include "app_proc.pre"

SET TERM ; ^

--

#define PROCEDURE FUNCTION
#define BEGIN RETURNS INTEGER AS $$ BEGIN
#define ENDPROC RETURN 0; END; $$ LANGUAGE PLPGSQL;
#define qa(id) id
#define SEQUENCE(id) SEQUENCE id MINVALUE 1 MAXVALUE 2147483640;
#define EXECUTE SELECT
#define ENDIF END IF;

#include "app_proc.pre"

--

CREATE PROCEDURE DELETE_SESSION(KEY_NO INTEGER, KEY_YEAR INTEGER, KEY_TYPE CHAR(1), KEY_KIND CHAR(1), KEY_DATE DATE, EVENT_NO INTEGER, INDEX_YEAR INTEGER, INDEX_TYPE CHAR(1), INDEX_KIND CHAR(1))
BEGIN
	DELETE FROM T_SURROUNDMENT WHERE F_LAWSUIT_NO = qa(KEY_NO) AND F_LAWSUIT_YEAR = qa(KEY_YEAR) AND F_LAWSUIT_TYPE = qa(KEY_TYPE) AND F_SESSION_KIND = qa(KEY_KIND) AND F_SESSION_DATE = qa(KEY_DATE);
	EXECUTE DELETE_CONTAINER_DATA(KEY_NO, KEY_YEAR, KEY_TYPE, KEY_KIND, KEY_DATE);
	DELETE FROM T_SESSION WHERE F_NO = qa(KEY_NO) AND F_YEAR = qa(KEY_YEAR) AND F_TYPE = qa(KEY_TYPE) AND F_KIND = qa(KEY_KIND) AND F_DATE = qa(KEY_DATE);
	DELETE FROM T_SCHED WHERE F_NO = qa(KEY_NO) AND F_YEAR = qa(KEY_YEAR) AND F_TYPE = qa(KEY_TYPE) AND F_KIND = qa(KEY_KIND) AND F_DATE = qa(KEY_DATE);
	DELETE FROM T_SESSION_TIMES WHERE F_NO = qa(KEY_NO) AND F_YEAR = qa(KEY_YEAR) AND F_TYPE = qa(KEY_TYPE) AND F_KIND = qa(KEY_KIND) AND F_DATE = qa(KEY_DATE);
	EXECUTE DELETE_EVENT_INDEX(EVENT_NO, INDEX_YEAR, INDEX_TYPE, INDEX_KIND);
ENDPROC

CREATE SEQUENCE(G_FOO)

--

SELECT RDB$RELATION_NAME FROM RDB$RELATIONS WHERE RDB$FLAGS = 1 ORDER BY RDB$RELATION_NAME;

SET TERM ^ ;

/* delete and keep history */
CREATE PROCEDURE DELETE_TEST
(
  TEST_HALL INTEGER,
  TEST_OPC INTEGER,
  TEST_GOP CHAR(1),
  TEST_UCN CHAR(10),
  TEST_DATE DATE
)
AS
	DECLARE VARIABLE HALL_ALIAS CHAR(5);
	DECLARE VARIABLE HALL_NAME CHAR(40);
	DECLARE VARIABLE HALL_ADDRESS CHAR(60);
	DECLARE VARIABLE HALL_FLAGS INTEGER;
	DECLARE VARIABLE BUF_HALL INTEGER;
	DECLARE VARIABLE BUF_DATE DATE;
	DECLARE VARIABLE BUF_WEEKDAY CHAR(1);
	DECLARE VARIABLE BEF_COLLEGE CHAR(1);
	DECLARE VARIABLE BEF_COMPOSITION INTEGER;
	DECLARE VARIABLE BEF_FLAGS INTEGER;
	DECLARE VARIABLE BEF_TEXT CHAR(40);
	DECLARE VARIABLE AFT_COLLEGE CHAR(1);
	DECLARE VARIABLE AFT_COMPOSITION INTEGER;
	DECLARE VARIABLE AFT_FLAGS INTEGER;
	DECLARE VARIABLE AFT_TEXT CHAR(40);
BEGIN
	SELECT F_HALL, F_ALIAS, F_NAME, F_ADDRESS, F_FLAGS FROM T_HALL WHERE F_HALL = :TEST_HALL
	INTO :BUF_HALL, :HALL_ALIAS, HALL_NAME, HALL_ADDRESS, HALL_FLAGS;
			
	IF (BUF_HALL IS NOT NULL) THEN
		INSERT INTO T_LOG_HALL VALUES(:BUF_HALL, :HALL_NAME, :HALL_ALIAS, :HALL_ADDRESS, :HALL_FLAGS, :TEST_OPC, :TEST_GOP, :TEST_DATE, :TEST_UCN);
		
	BUF_HALL = NULL;
	
	FOR	
		SELECT F_DATE, F_HALL, F_BEF_COLLEGE, F_BEF_COMPOSITION, F_BEF_FLAGS, F_BEF_TEXT, F_AFT_COLLEGE, F_AFT_COMPOSITION, F_AFT_FLAGS, F_AFT_TEXT FROM T_LOAD_DATE WHERE F_HALL = :TEST_HALL  	
		INTO :BUF_DATE, :BUF_HALL, :BEF_COLLEGE, :BEF_COMPOSITION, :BEF_FLAGS, :BEF_TEXT, :AFT_COLLEGE, :AFT_COMPOSITION, :AFT_FLAGS, :AFT_TEXT	
	DO
		INSERT INTO T_LOG_LOAD_DATE VALUES(:BUF_DATE, :BUF_HALL, :BEF_COLLEGE, :BEF_COMPOSITION, :BEF_FLAGS, :BEF_TEXT, :AFT_COLLEGE, :AFT_COMPOSITION, :AFT_FLAGS, :AFT_TEXT, :TEST_OPC, :TEST_GOP, :TEST_DATE, :TEST_UCN);

	BUF_HALL = 0; BEF_COLLEGE = NULL; BEF_COMPOSITION = 0; BEF_FLAGS = 0; BEF_TEXT = NULL; AFT_COLLEGE = NULL; AFT_COMPOSITION = 0; AFT_FLAGS = 0; AFT_TEXT = NULL;

	FOR	
		SELECT F_WEEKDAY, F_HALL, F_BEF_COLLEGE, F_BEF_COMPOSITION, F_BEF_FLAGS, F_BEF_TEXT, F_AFT_COLLEGE, F_AFT_COMPOSITION, F_AFT_FLAGS, F_AFT_TEXT FROM T_LOAD_WEEK WHERE F_HALL = :TEST_HALL
		INTO :BUF_WEEKDAY, :BUF_HALL, :BEF_COLLEGE, :BEF_COMPOSITION, :BEF_FLAGS, :BEF_TEXT, :AFT_COLLEGE, :AFT_COMPOSITION, :AFT_FLAGS, :AFT_TEXT
	DO
		INSERT INTO T_LOG_LOAD_WEEK VALUES(:BUF_WEEKDAY, :BUF_HALL, :BEF_COLLEGE, :BEF_COMPOSITION, :BEF_FLAGS, :BEF_TEXT, :AFT_COLLEGE, :AFT_COMPOSITION, :AFT_FLAGS, :AFT_TEXT, :TEST_OPC, :TEST_GOP, :TEST_DATE, :TEST_UCN);
		
	EXECUTE PROCEDURE DELETE_HALL(TEST_HALL);
END ^


SET TERM ; ^

COMMIT WORK;

SET TERM ^ ;
CREATE PROCEDURE DELETE_GROUP_DATA(KEY_NO INTEGER, KEY_YEAR INTEGER, KEY_TYPE CHAR(1)) AS
BEGIN
 DELETE FROM T_SIDE_WIND WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_TYPE = :KEY_TYPE;
 DELETE FROM T_LINK_WIND WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_TYPE = :KEY_TYPE;
 DELETE FROM T_SUBPOENA WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_TYPE = :KEY_TYPE;
 DELETE FROM T_EXPENSE WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_TYPE = :KEY_TYPE;
 DELETE FROM T_MOVEMENT WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_TYPE = :KEY_TYPE;
END ^
CREATE PROCEDURE DELETE_ORIGIN_DATA(KEY_NO INTEGER, KEY_YEAR INTEGER, KEY_TYPE CHAR(1)) AS
BEGIN
 DELETE FROM T_REPLACE_PAIRS WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_TYPE = :KEY_TYPE;
 EXECUTE PROCEDURE DELETE_GROUP_DATA(KEY_NO, KEY_YEAR, KEY_TYPE);
END ^
CREATE PROCEDURE DELETE_SURROUND(KEY_NO INTEGER, KEY_YEAR INTEGER, KEY_TYPE CHAR(1)) AS
BEGIN
 DELETE FROM T_SURROUNDMENT WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_TYPE = :KEY_TYPE;
 EXECUTE PROCEDURE DELETE_GROUP_DATA(KEY_NO, KEY_YEAR, KEY_TYPE);
 DELETE FROM T_SCHED WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_TYPE = :KEY_TYPE;
 DELETE FROM T_SURROUND WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_TYPE = :KEY_TYPE;
 DELETE FROM T_INDEX WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_INDEX = 'r';
END ^
CREATE PROCEDURE DELETE_CONTAINER_DATA(KEY_NO INTEGER, KEY_YEAR INTEGER, KEY_TYPE CHAR(1), KEY_KIND CHAR(1), KEY_DATE INTEGER) AS
BEGIN
 DELETE FROM T_SIDE_WIND WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_TYPE = :KEY_TYPE AND F_KIND = :KEY_KIND AND F_DATE = :KEY_DATE;
 DELETE FROM T_LINK_WIND WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_TYPE = :KEY_TYPE AND F_KIND = :KEY_KIND AND F_DATE = :KEY_DATE;
 DELETE FROM T_SUBPOENA WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_TYPE = :KEY_TYPE AND F_KIND = :KEY_KIND AND F_DATE = :KEY_DATE;
 DELETE FROM T_EXPENSE WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_TYPE = :KEY_TYPE AND F_KIND = :KEY_KIND AND F_DATE = :KEY_DATE;
END ^
CREATE PROCEDURE DELETE_EVENT_INDEX(EVENT_NO INTEGER, INDEX_YEAR INTEGER, INDEX_TYPE CHAR(1), INDEX_KIND CHAR(1)) AS
BEGIN
 IF (:INDEX_TYPE IS NOT NULL) THEN
  DELETE FROM T_EVENT_INDEX WHERE F_EVENT_NO = :EVENT_NO AND F_YEAR = :INDEX_YEAR AND F_TYPE = :INDEX_TYPE AND F_KIND = :INDEX_KIND;
END ^
CREATE PROCEDURE DELETE_DECISION(KEY_NO INTEGER, KEY_YEAR INTEGER, KEY_TYPE CHAR(1), KEY_KIND CHAR(1), KEY_DATE INTEGER, EVENT_NO INTEGER, INDEX_YEAR INTEGER, INDEX_TYPE CHAR(1), INDEX_KIND CHAR(1)) AS
BEGIN
 DELETE FROM T_JUDGEMENT WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_TYPE = :KEY_TYPE AND F_KIND = :KEY_KIND AND F_DATE = :KEY_DATE;
 EXECUTE PROCEDURE DELETE_CONTAINER_DATA(KEY_NO, KEY_YEAR, KEY_TYPE, KEY_KIND, KEY_DATE);
 DELETE FROM T_DECISION WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_TYPE = :KEY_TYPE AND F_KIND = :KEY_KIND AND F_DATE = :KEY_DATE;
 DELETE FROM T_SCHED WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_TYPE = :KEY_TYPE AND F_KIND = :KEY_KIND AND F_DATE = :KEY_DATE;
 EXECUTE PROCEDURE DELETE_EVENT_INDEX(EVENT_NO, INDEX_YEAR, INDEX_TYPE, INDEX_KIND);
END ^
CREATE PROCEDURE DELETE_SESSION(KEY_NO INTEGER, KEY_YEAR INTEGER, KEY_TYPE CHAR(1), KEY_KIND CHAR(1), KEY_DATE INTEGER, EVENT_NO INTEGER, INDEX_YEAR INTEGER, INDEX_TYPE CHAR(1), INDEX_KIND CHAR(1)) AS
BEGIN
 DELETE FROM T_SURROUNDMENT WHERE F_LAWSUIT_NO = :KEY_NO AND F_LAWSUIT_YEAR = :KEY_YEAR AND F_LAWSUIT_TYPE = :KEY_TYPE AND F_SESSION_KIND = :KEY_KIND AND F_SESSION_DATE = :KEY_DATE;
 EXECUTE PROCEDURE DELETE_CONTAINER_DATA(KEY_NO, KEY_YEAR, KEY_TYPE, KEY_KIND, KEY_DATE);
 DELETE FROM T_SESSION WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_TYPE = :KEY_TYPE AND F_KIND = :KEY_KIND AND F_DATE = :KEY_DATE;
 DELETE FROM T_SCHED WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_TYPE = :KEY_TYPE AND F_KIND = :KEY_KIND AND F_DATE = :KEY_DATE;
 DELETE FROM T_SESSION_TIMES WHERE F_NO = :KEY_NO AND F_YEAR = :KEY_YEAR AND F_TYPE = :KEY_TYPE AND F_KIND = :KEY_KIND AND F_DATE = :KEY_DATE;
 EXECUTE PROCEDURE DELETE_EVENT_INDEX(EVENT_NO, INDEX_YEAR, INDEX_TYPE, INDEX_KIND);
END ^
SET TERM ; ^
